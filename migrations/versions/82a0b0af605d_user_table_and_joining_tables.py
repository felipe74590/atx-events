"""user table and joining tables

Revision ID: 82a0b0af605d
Revises: 4099553bc537
Create Date: 2024-10-01 22:32:25.269447

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "82a0b0af605d"
down_revision: Union[str, None] = "4099553bc537"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
	# ### commands auto generated by Alembic - please adjust! ###
	op.drop_table("usereventsattended")
	op.drop_table("user")
	op.drop_table("event")
	op.drop_table("usereventssaved")
	# ### end Alembic commands ###


def downgrade() -> None:
	# ### commands auto generated by Alembic - please adjust! ###
	op.create_table(
		"usereventssaved",
		sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
		sa.Column("event_id", sa.INTEGER(), autoincrement=False, nullable=False),
		sa.ForeignKeyConstraint(["event_id"], ["event.id"], name="usereventssaved_event_id_fkey"),
		sa.ForeignKeyConstraint(["user_id"], ["user.id"], name="usereventssaved_user_id_fkey"),
		sa.PrimaryKeyConstraint("user_id", "event_id", name="usereventssaved_pkey"),
	)
	op.create_table(
		"event",
		sa.Column(
			"id",
			sa.INTEGER(),
			server_default=sa.text("nextval('event_id_seq'::regclass)"),
			autoincrement=True,
			nullable=False,
		),
		sa.Column("title", sa.VARCHAR(), autoincrement=False, nullable=False),
		sa.Column("venue", sa.VARCHAR(), autoincrement=False, nullable=False),
		sa.Column("start_datetime", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
		sa.Column("category", sa.VARCHAR(), autoincrement=False, nullable=True),
		sa.Column("event_link", sa.VARCHAR(), autoincrement=False, nullable=True),
		sa.PrimaryKeyConstraint("id", name="event_pkey"),
		postgresql_ignore_search_path=False,
	)
	op.create_table(
		"user",
		sa.Column("user_name", sa.VARCHAR(), autoincrement=False, nullable=False),
		sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False),
		sa.Column("password", sa.VARCHAR(), autoincrement=False, nullable=False),
		sa.Column(
			"id",
			sa.INTEGER(),
			server_default=sa.text("nextval('user_id_seq'::regclass)"),
			autoincrement=True,
			nullable=False,
		),
		sa.Column("active", sa.BOOLEAN(), autoincrement=False, nullable=False),
		sa.PrimaryKeyConstraint("id", name="user_pkey"),
		postgresql_ignore_search_path=False,
	)
	op.create_table(
		"usereventsattended",
		sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
		sa.Column("event_id", sa.INTEGER(), autoincrement=False, nullable=False),
		sa.ForeignKeyConstraint(["event_id"], ["event.id"], name="usereventsattended_event_id_fkey"),
		sa.ForeignKeyConstraint(["user_id"], ["user.id"], name="usereventsattended_user_id_fkey"),
		sa.PrimaryKeyConstraint("user_id", "event_id", name="usereventsattended_pkey"),
	)
	# ### end Alembic commands ###
